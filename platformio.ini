; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
data_dir    = ./data
default_envs = demo

[common]
lib_deps        = crankyoldgit/IRremoteESP8266  @ ^2.7.20
                  fastled/FastLED               @ ^3.4.0
                  adafruit/Adafruit BusIO       @ ^1.9.1
                  adafruit/Adafruit GFX Library @ ^1.10.12
                  adafruit/Adafruit ILI9341     @ ^1.5.10                  
                  bblanchon/ArduinoJson         @ ^6.8.14
                  olikraus/U8g2                 @ ^2.28.8
                  joaolopesf/RemoteDebug        @ ^3.0.5
                  kosme/arduinoFFT              @ ^1.5.6
                  me-no-dev/AsyncTCP            @ ^1.1.1
                  thomasfredericks/Bounce2      @ ^2.7.0
                  me-no-dev/ESP Async WebServer @ ^1.2.3
                  Wire                                        ; need because platformio's library dependency finder isn't behaving

[m5stick-c]
lib_deps        = ${common.lib_deps}
                  m5stack/M5StickC     @ ^0.2.3 

[ttgo]
lib_deps        = ${common.lib_deps}
                  https://github.com/Xinyuan-LilyGO/TTGO-T-Display

[m5stick-c-plus]
lib_deps        = ${common.lib_deps}
                  m5stack/M5StickCPlus @ ^0.0.2

[all]
lib_deps        = ${common.lib_deps}
                  ${m5stick-c.lib_deps}
                  ${m5stick-c-plus.lib_deps}

[env]
platform        = espressif32
framework       = arduino
build_type      = debug
build_unflags   = -std=gnu++11

lib_deps        = ${common.lib_deps}
lib_extra_dirs = ${PROJECT_DIR}/lib

; This partition table attempts to fit everything in 4M of flash.
board_build.partitions = partitions_custom.csv

monitor_filters = esp32_exception_decoder

[env:all-deps]
lib_deps      =  ${all.lib_deps}

[env:demo]
board         = wemos_d1_mini32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM3                    ; This will vary by machine
build_flags   = -DDEMO=1
                -std=gnu++17
                -Ofast 

[env:wrover-demo]
board           = esp-wrover-kit
monitor_speed   = 115200
upload_speed    = 1500000
build_flags     = -DWROVERKIT=1
                  -DDEBUG=1
                  -DUSE_SCREEN=1
                  -DUSE_PSRAM=0
                  -DBOARD_HAS_PSRAM=0
                  -std=gnu++17
                  -Ofast 
                  -mfix-esp32-psram-cache-issue
build_type      = debug
upload_port     = COM10
debug_tool      = ftdi
upload_protocol = ftdi
debug_init_break = 
;upload_protocol = ftdi

[env:ledstrip]
board         = heltec_wifi_kit_32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM13                   ; This will vary by machine
build_flags   = -DLEDSTRIP=1
                -DUSE_SCREEN=1
                -std=gnu++17
                -Ofast 

; This is the basic DEMO project, but expanded to work on the M5, which means it can draw to 
; the built in LCD.  It's made so that you can connect to the small 4-pin connector on the M5,
; so it sends power and ground as well as data on PIN 32.

[env:m5demo]
platform      = espressif32
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM3                   ; This will vary by machine
build_flags   = -DDEMO=1
                -DUSE_SCREEN=1
                -std=gnu++17
                -Ofast 
                -DM5STICKC=1
lib_deps      = ${m5stick-c.lib_deps}

; This is largely the same as the m5demo above except it links to the PLUS version of the lib
; and defines M5STICKCPLUS=1 

[env:m5plusdemo]
platform      = espressif32
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM3                   ; This will vary by machine
build_flags   = -DDEMO=1
                -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

; For low-density setups like a strand of Christmas lights

[env:strand]
platform      = espressif32
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM4                   ; This will vary by machine
build_flags   = -DSTRAND=1
                -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:heltecdemo]
board         = heltec_wifi_kit_32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM13
monitor_port  = COM13
build_flags   = -DDEMO=1
                -DUSE_SCREEN=1
                -std=gnu++17
                -Ofast 

[env:heltecv2demo]                     ; V2 board has 8M flash
board = heltec_wifi_kit_32_v2
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM7
monitor_port  = COM7
build_flags   = -DDEMO=1
                -DUSE_SCREEN=1
                -std=gnu++17
                -Ofast 

[env:spectrum]
board         = m5stick-c                    ; Requires the M5 Stick C Plus (note the Plus)
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM4
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DSPECTRUM=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:spectrumlite]                            ; Sane as SPECTRUM but required a non-Plus M5 Stick
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM15
build_flags   = -DM5STICKC=1
                -DUSE_SCREEN=1
                -DSPECTRUM=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c.lib_deps}

[env:ttgo]
board         = esp32dev
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM14
build_flags   = -DTTGO=1
                -DUSE_SCREEN=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -std=gnu++17
                -Ofast 
lib_deps      = ${ttgo.lib_deps}

[env:xmastrees]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM11
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DXMASTREES=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:treeset]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM11
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DTREESET=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:insulators]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM23
build_flags   = -DM5STICKC=1
                -DUSE_SCREEN=1
                -DINSULATORS=1
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c.lib_deps}



[env:magicmirror]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM21
build_flags   = -DM5STICKC=1
                -DUSE_SCREEN=1
                -DMAGICMIRROR=1
                -std=gnu++17
                -Ofast                 
lib_deps      = ${m5stick-c.lib_deps}
                

[env:atomlight-d1]
board         = wemos_d1_mini32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM10
build_type    = debug
build_flags   = -DATOMLIGHT=1
                -std=gnu++17
                -Ofast 
                -DCORE_DEBUG_LEVEL=6
                ; -DDEBUG_DISABLED=1

[env:atomlight-m5]
board         = m5stick-c
monitor_speed = 115200
upload_speed  = 1500000
upload_port   = COM3
build_flags   = -DATOMLIGHT=1
                -std=gnu++17
                -Ofast 
                -DM5STICKCPLUS=1
                -DCORE_DEBUG_LEVEL=6
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:brooklynroom]
board         = heltec_wifi_kit_32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM10
build_flags   = -DBROOKLYNROOM=1
                -std=gnu++17
                -Ofast 

[env:fanset]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM3
build_flags   = -DM5STICKC=1
                -DUSE_SCREEN=1
                -DFANSET=1
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c.lib_deps}

[env:atomi]
board         = heltec_wifi_kit_32
upload_port   = /dev/cu.SLAB_USBtoUART
upload_speed  = 921600
build_flags   = -DATOMISTRING=1 
                -DHELTEC=1
                -DUSE_SCREEN=1
                -std=gnu++17
                -Ofast 

[env:cube]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM6
build_flags   = -DM5STICKCPLUS=1
                -DUSE_OLED=1
                -DCUBE=1
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}